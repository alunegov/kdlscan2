package lng

import (
	"bufio"
	"os"
	"strconv"
	"strings"
	"time"
)

// Load загружает (и разбирает) lng-файл с диска
func Load(fileName string) (*File, error) {
	res := NewFile()

	f, err := os.Open(fileName)
	if err != nil {
		return nil, err
	}
	defer f.Close()

	var section *Section
	state := 1

	s := bufio.NewScanner(f)
	for s.Scan() {
		baseLine := s.Text()

		switch state {
		case 1:
			if strings.HasPrefix(baseLine, "[") {
				section, _ = res.NewSection(baseLine)
				state = 2
			}
		case 2:
			if baseLine == "" {
				state = 1
				continue
			}

			flag, name, version, value := parseKey(baseLine)
			_, _ = section.NewKey(flag, name, version, value)
		}
	}
	if err := s.Err(); err != nil {
		return nil, err
	}

	return res, nil
}

func parseKey(s string) (KeyFlag, string, KeyVersion, string) {
	delim := strings.Index(s, "=")

	k := s[:delim]

	kf := Std
	if strings.HasPrefix(k, "(") {
		if k[1] == '!' {
			kf = Modified
		} else {
			kf = Deleted
		}
		k = k[3:]
	}

	kv := 0
	if i := strings.Index(k, "{"); i != -1 {
		kv, _ = strconv.Atoi(k[i+1 : len(k)-1])
		k = k[:len(k)-3]
	}

	v := s[delim+1:]

	return kf, k, KeyVersion(kv), v
}

// Save сохраняет lng-файл на диск
func Save(file *File, fileName string) error {
	f, err := os.Create(fileName)
	if err != nil {
		return err
	}
	defer f.Close()

	w := bufio.NewWriter(f)
	w.WriteString("; Kryvich's Delphi Localizer Language File." + "\r\n")
	w.WriteString("; Generated by kdlscan2, " + time.Now().Format(time.RFC3339) + "\r\n")
	w.WriteString("\r\n")
	// TODO: определять настройки Humanize при загрузке файла
	w.WriteString("Humanize=1" + "\r\n")
	w.WriteString("HumanizedCR=\\^" + "\r\n")
	w.WriteString("HumanizedCRLF=\\+" + "\r\n")
	w.WriteString("\r\n")
	for _, s := range file.Sections() {
		w.WriteString(s.Name() + "\r\n")
		for _, k := range s.Keys() {
			w.WriteString(k.String() + "\r\n")
		}
		w.WriteString("\r\n")
	}
	w.Flush()

	return nil
}
